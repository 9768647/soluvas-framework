<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:commons="http://www.soluvas.org/schema/commons/1.0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:ecore_1="http://www.eclipse.org/emf/2002/Ecore" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.soluvas.org/schema/commons/1.0">
  <xsd:import namespace="http://www.eclipse.org/emf/2002/Ecore" schemaLocation="ecore.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/emf/2002/Ecore" schemaLocation="ecore.xsd"/>
  <xsd:import namespace="http://www.omg.org/XMI" schemaLocation="platform:/plugin/org.eclipse.emf.ecore/model/XMI.xsd"/>
  <xsd:simpleType name="ResourceType">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="bundle">
        <xsd:annotation>
          <xsd:documentation>The resource is from a bundle classpath.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="file">
        <xsd:annotation>
          <xsd:documentation>The resource is from a file, usually in a watched folder.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="database">
        <xsd:annotation>
          <xsd:documentation>The resource is from a persistence storage.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Gender">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="male"/>
      <xsd:enumeration value="female"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EClassStatus">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="unresolved"/>
      <xsd:enumeration value="resolved"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="JavaClassStatus">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="unresolved"/>
      <xsd:enumeration value="resolved"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType abstract="true" name="ResourceAware">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="resourceType" type="commons:ResourceType"/>
    <xsd:attribute name="resourceUri" type="xsd:string"/>
    <xsd:attribute name="resourceName" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Name relative to parent resource.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="ResourceAware" type="commons:ResourceAware"/>
  <xsd:complexType abstract="true" name="Positionable">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="positioner" type="xsd:int"/>
  </xsd:complexType>
  <xsd:element name="Positionable" type="commons:Positionable"/>
  <xsd:complexType name="AppManifest">
    <xsd:annotation>
      <xsd:documentation>Attributes are optional because can use OverlayingSupplier.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="commons:Positionable">
        <xsd:attribute name="resourceType" type="commons:ResourceType"/>
        <xsd:attribute name="resourceUri" type="xsd:string"/>
        <xsd:attribute name="resourceName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Name relative to parent resource.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="title" type="xsd:string"/>
        <xsd:attribute name="description" type="xsd:string"/>
        <xsd:attribute name="domain" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Primary domain name of the application, e.g. "berbatik.com". Used by Email system.

&lt;p&gt;For development, use e.g. "berbatik.annafi.dev".

&lt;p&gt;TODO: title &amp; domain should probably be moved somewhere else, since it's tenant &amp; environment specific.

&lt;p&gt;Production: title=Berbatik, domain=berbatik.com

&lt;p&gt;Staging: title=Berbatik stg, domain=stg.berbatik.com

&lt;p&gt;Development: title=Berbatik Annafi, domain=berbatik.annafi.dev

&lt;p&gt;Description usually stays the same, but can be different too.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="AppManifest" type="commons:AppManifest">
    <xsd:annotation>
      <xsd:documentation>Attributes are optional because can use OverlayingSupplier.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="PersonInfo">
    <xsd:annotation>
      <xsd:documentation>Person partial value object that is stored in Graph database (usually Neo4j) or embedded in a MongoDB document.

The ID is Directory entry uid attribute.
</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="commons:Identifiable">
        <xsd:attribute name="photoId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Avatar Photo ID directly usable by Image Store. Used by {#getImageId()}.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="slug" type="xsd:string" use="required">
          <xsd:annotation>
            <xsd:documentation>Slug (aka Directory uniqueIdentifier) used in SEO-friendly URIs.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="name" type="xsd:string" use="required">
          <xsd:annotation>
            <xsd:documentation>Display name (can be full name, nickname, slug, screen name, etc. whatever is commonly used by the particular app).
Used by {#getName()}.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="gender" type="commons:Gender"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PersonInfo" type="commons:PersonInfo">
    <xsd:annotation>
      <xsd:documentation>Person partial value object that is stored in Graph database (usually Neo4j) or embedded in a MongoDB document.

The ID is Directory entry uid attribute.
</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="Timestamped">
    <xsd:annotation>
      <xsd:documentation>Can be used by any EObject that wants to preserve creationTime/modificationTime.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="creationTime" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>First creation time (raw).</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="modificationTime" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Last modification time (raw).</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="Timestamped" type="commons:Timestamped">
    <xsd:annotation>
      <xsd:documentation>Can be used by any EObject that wants to preserve creationTime/modificationTime.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="Identifiable">
    <xsd:annotation>
      <xsd:documentation>Object that has ID as String.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="id" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>ID of the object. Usually either lowercase_underscored or UUID.

In LDAP, it can either be 'uid' or 'uniqueIdentifier'.

RFC1274: unique identifer.
LDAP: uniqueIdentifier</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="Identifiable" type="commons:Identifiable">
    <xsd:annotation>
      <xsd:documentation>Object that has ID as String.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="Sluggable">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="slug" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Slug (aka Directory uniqueIdentifier) used in SEO-friendly URIs.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="Sluggable" type="commons:Sluggable"/>
  <xsd:complexType abstract="true" name="Nameable">
    <xsd:annotation>
      <xsd:documentation>An object that can provide a name.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
  </xsd:complexType>
  <xsd:element name="Nameable" type="commons:Nameable">
    <xsd:annotation>
      <xsd:documentation>An object that can provide a name.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="Imageable">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
  </xsd:complexType>
  <xsd:element name="Imageable" type="commons:Imageable"/>
  <xsd:complexType abstract="true" name="PhotoIdContainer">
    <xsd:annotation>
      <xsd:documentation>Contains image ID as photoId attribute and has default implementation for {#getImageId()}.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="commons:Imageable">
        <xsd:attribute name="photoId" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Avatar Photo ID directly usable by Image Store. Used by {#getImageId()}.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PhotoIdContainer" type="commons:PhotoIdContainer">
    <xsd:annotation>
      <xsd:documentation>Contains image ID as photoId attribute and has default implementation for {#getImageId()}.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="NameContainer">
    <xsd:annotation>
      <xsd:documentation>Contains a name attribute named 'name' and has default implementation for {@link #getName()}.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="commons:Nameable">
        <xsd:attribute name="name" type="xsd:string" use="required">
          <xsd:annotation>
            <xsd:documentation>Display name (can be full name, nickname, slug, screen name, etc. whatever is commonly used by the particular app).
Used by {#getName()}.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NameContainer" type="commons:NameContainer">
    <xsd:annotation>
      <xsd:documentation>Contains a name attribute named 'name' and has default implementation for {@link #getName()}.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="Informer">
    <xsd:annotation>
      <xsd:documentation>Can transform itself an "Info" object.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
  </xsd:complexType>
  <xsd:element name="Informer" type="commons:Informer">
    <xsd:annotation>
      <xsd:documentation>Can transform itself an "Info" object.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="Describable">
    <xsd:annotation>
      <xsd:documentation>Has description.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="description" type="xsd:string"/>
  </xsd:complexType>
  <xsd:element name="Describable" type="commons:Describable">
    <xsd:annotation>
      <xsd:documentation>Has description.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="BundleAware">
    <xsd:annotation>
      <xsd:documentation>BundleAware classes are usually also ResourceAware (since Bundle is a resource).
However, Soluvas can load from other non-bundle resources as well, etc. JCR, Git, filesystem, database, HTTP, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
  </xsd:complexType>
  <xsd:element name="BundleAware" type="commons:BundleAware">
    <xsd:annotation>
      <xsd:documentation>BundleAware classes are usually also ResourceAware (since Bundle is a resource).
However, Soluvas can load from other non-bundle resources as well, etc. JCR, Git, filesystem, database, HTTP, etc.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="JavaClassLinked">
    <xsd:annotation>
      <xsd:documentation>Implementation is in {@link org.soluvas.commons.JavaClassLinked.Trait}.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="javaClassName" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>The Java class name linked to this type. Used to resolve the Java Class instance.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="javaClass" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>The Java class linked to this type. Only available when resolved.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="javaClassStatus" type="commons:JavaClassStatus"/>
  </xsd:complexType>
  <xsd:element name="JavaClassLinked" type="commons:JavaClassLinked">
    <xsd:annotation>
      <xsd:documentation>Implementation is in {@link org.soluvas.commons.JavaClassLinked.Trait}.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="EClassLinked">
    <xsd:annotation>
      <xsd:documentation>Implementation is in {@link org.soluvas.commons.util.EClassLinked.Trait}.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element name="eClass" type="ecore:EClass">
        <xsd:annotation>
          <xsd:documentation>EClass for this instances of this type.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="eClassStatus" type="commons:EClassStatus"/>
    <xsd:attribute name="ePackageNsPrefix" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Used to resolve agains NS Prefix instead of EPackage name. The key format will be "{ePackage.nsPrefix}:{eClass.name}".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="eClassName" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Name of EClass, used for resolving the EClass instance.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="ePackageName" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Name of EPackage, used for resolving the EClass instance.  The key format will be "{ePackage.name}.{eClass.name}".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="eClass" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>EClass for this instances of this type.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="EClassLinked" type="commons:EClassLinked">
    <xsd:annotation>
      <xsd:documentation>Implementation is in {@link org.soluvas.commons.util.EClassLinked.Trait}.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="SchemaVersionable">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
  </xsd:complexType>
  <xsd:element name="SchemaVersionable" type="commons:SchemaVersionable"/>
  <xsd:complexType abstract="true" name="EFactoryLinked">
    <xsd:annotation>
      <xsd:documentation>Useful for schema classes, e.g. {@code com.soluvas.story.schema.ActionType}, {@code com.soluvas.story.schema.TargetType}.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element name="eFactory" type="ecore:EFactory">
        <xsd:annotation>
          <xsd:documentation>Useful for schema classes, e.g. {@code com.soluvas.story.schema.ActionType}, {@code com.soluvas.story.schema.TargetType}. Only accessible when resolved.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="eFactory" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Useful for schema classes, e.g. {@code com.soluvas.story.schema.ActionType}, {@code com.soluvas.story.schema.TargetType}. Only accessible when resolved.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="EFactoryLinked" type="commons:EFactoryLinked">
    <xsd:annotation>
      <xsd:documentation>Useful for schema classes, e.g. {@code com.soluvas.story.schema.ActionType}, {@code com.soluvas.story.schema.TargetType}.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="NsPrefixable">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="nsPrefix" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Context-specific NS prefix.

Comes from: getActionType().getEClass().getEPackage().getNsPrefix().</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="NsPrefixable" type="commons:NsPrefixable"/>
  <xsd:complexType name="WebAddress">
    <xsd:annotation>
      <xsd:documentation>Tenant-wide website URI configuration.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="baseUri" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Absolute URI of the website. Used by email notifications, external servers, etc.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="basePath" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Absolute path to website, e.g. /</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="apiPath" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Absolute path to API, e.g. /api/
</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="imagesUri" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Absolute URI to image files, e.g. http://images.berbatik.com/</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="skinUri" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Absolute URI to CSS files and dependencies (sprite images, fonts, etc.), e.g. http://skin.berbatik.com/</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="jsUri" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>Absolute URI to JavaScript files, e.g. http://js.berbatik.com/</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="secureBaseUri" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Absolute URI to website, e.g. https://www.berbatik.com/</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="secureImagesUri" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Absolute URI to secure image files, e.g. https://images.berbatik.com/</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="secureSkinUri" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Absolute secure URI to CSS files and dependencies (sprite images, fonts, etc.), e.g. http://skin.berbatik.com/</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="secureJsUri" type="xsd:string"/>
  </xsd:complexType>
  <xsd:element name="WebAddress" type="commons:WebAddress">
    <xsd:annotation>
      <xsd:documentation>Tenant-wide website URI configuration.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Added">
    <xsd:annotation>
      <xsd:documentation>Inspired by {@link org.eclipse.emf.common.notify.Notification}.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="commons:ObjectNotification"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Added" type="commons:Added">
    <xsd:annotation>
      <xsd:documentation>Inspired by {@link org.eclipse.emf.common.notify.Notification}.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType abstract="true" name="ModelNotification">
    <xsd:annotation>
      <xsd:documentation>Inspired by {@link org.eclipse.emf.common.notify.Notification}.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="commons:EObjectLinked">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="container" type="ecore:EObject"/>
        </xsd:choice>
        <xsd:attribute name="container" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ModelNotification" type="commons:ModelNotification">
    <xsd:annotation>
      <xsd:documentation>Inspired by {@link org.eclipse.emf.common.notify.Notification}.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="AttributeSet">
    <xsd:complexContent>
      <xsd:extension base="commons:AttributeNotification"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="AttributeSet" type="commons:AttributeSet"/>
  <xsd:complexType name="AttributeUnset">
    <xsd:complexContent>
      <xsd:extension base="commons:AttributeNotification"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="AttributeUnset" type="commons:AttributeUnset"/>
  <xsd:complexType name="Removed">
    <xsd:complexContent>
      <xsd:extension base="commons:ObjectNotification"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Removed" type="commons:Removed"/>
  <xsd:complexType abstract="true" name="ObjectNotification">
    <xsd:complexContent>
      <xsd:extension base="commons:ModelNotification">
        <xsd:attribute name="object" type="xsd:string" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ObjectNotification" type="commons:ObjectNotification"/>
  <xsd:complexType name="AttributeNotification">
    <xsd:complexContent>
      <xsd:extension base="commons:ModelNotification">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="attribute" type="ecore:EAttribute"/>
        </xsd:choice>
        <xsd:attribute name="object" type="xsd:string" use="required"/>
        <xsd:attribute name="oldValue" type="xsd:string"/>
        <xsd:attribute name="newValue" type="xsd:string"/>
        <xsd:attribute name="attribute" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="AttributeNotification" type="commons:AttributeNotification"/>
  <xsd:complexType name="AddedMany">
    <xsd:complexContent>
      <xsd:extension base="commons:ObjectsNotification"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="AddedMany" type="commons:AddedMany"/>
  <xsd:complexType name="RemovedMany">
    <xsd:complexContent>
      <xsd:extension base="commons:ObjectsNotification"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="RemovedMany" type="commons:RemovedMany"/>
  <xsd:complexType abstract="true" name="ObjectsNotification">
    <xsd:complexContent>
      <xsd:extension base="commons:ModelNotification">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="objects" nillable="true" type="xsd:string"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ObjectsNotification" type="commons:ObjectsNotification"/>
  <xsd:complexType abstract="true" name="EObjectLinked">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
  </xsd:complexType>
  <xsd:element name="EObjectLinked" type="commons:EObjectLinked"/>
  <xsd:complexType abstract="true" name="Parentable">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element name="parent" type="ecore:EObject"/>
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="parent" type="xsd:string"/>
  </xsd:complexType>
  <xsd:element name="Parentable" type="commons:Parentable"/>
  <xsd:complexType abstract="true" name="CategoryLike">
    <xsd:annotation>
      <xsd:documentation>ID is UUID, it won't change when categories are reordered are moved/restructured.

&lt;p&gt;Slug is used as name in JCR repositories.

&lt;p&gt;Name is used as displayName in JCR repositories.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="commons:Positionable">
        <xsd:attribute name="slug" type="xsd:string" use="required">
          <xsd:annotation>
            <xsd:documentation>Slug (aka Directory uniqueIdentifier) used in SEO-friendly URIs.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="id" type="xsd:string" use="required">
          <xsd:annotation>
            <xsd:documentation>ID of the object. Usually either lowercase_underscored or UUID.

In LDAP, it can either be 'uid' or 'uniqueIdentifier'.

RFC1274: unique identifer.
LDAP: uniqueIdentifier</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="name" type="xsd:string" use="required">
          <xsd:annotation>
            <xsd:documentation>Display name (can be full name, nickname, slug, screen name, etc. whatever is commonly used by the particular app).
Used by {#getName()}.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="slugPath" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Automatically updated based on slug and parent slugs, separated by '/'.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="color" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>HTML color code name or hexadecimal code (i.e. "#3356ff") of category color (usually used as background).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="imageId" type="xsd:string"/>
        <xsd:attribute name="level" type="xsd:int">
          <xsd:annotation>
            <xsd:documentation>The "implicit root category" has level 0. So a Category without a parent has level 1. Automatically updated on save.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="categoryCount" type="xsd:long">
          <xsd:annotation>
            <xsd:documentation>Number of children categories. Automatically updated when categories are restructured.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CategoryLike" type="commons:CategoryLike">
    <xsd:annotation>
      <xsd:documentation>ID is UUID, it won't change when categories are reordered are moved/restructured.

&lt;p&gt;Slug is used as name in JCR repositories.

&lt;p&gt;Name is used as displayName in JCR repositories.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="CategoryInfo">
    <xsd:complexContent>
      <xsd:extension base="commons:CategoryLike">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="parent" type="ecore:EObject"/>
        </xsd:choice>
        <xsd:attribute name="parent" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CategoryInfo" type="commons:CategoryInfo"/>
</xsd:schema>
