<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:commons="http://www.soluvas.org/schema/commons/1.0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:email="http://www.soluvas.org/schema/email/1.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.soluvas.org/schema/email/1.0">
  <xsd:import namespace="http://www.omg.org/XMI" schemaLocation="platform:/plugin/org.eclipse.emf.ecore/model/XMI.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/emf/2002/Ecore" schemaLocation="ecore.xsd"/>
  <xsd:import namespace="http://www.soluvas.org/schema/commons/1.0" schemaLocation="commons.xsd"/>
  <xsd:simpleType name="EmailFormat">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="multipart"/>
      <xsd:enumeration value="plain"/>
      <xsd:enumeration value="html"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="WebSecurity">
    <xsd:annotation>
      <xsd:documentation>Preference between URIs will use unsecure HTTP or secured HTTPS.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="prefer_secure">
        <xsd:annotation>
          <xsd:documentation>Prefer HTTPS for sensitive content (recommended).</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="always_secure">
        <xsd:annotation>
          <xsd:documentation>Always use secure HTTPS for all content, including content with publicly available URIs. (slows down)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="always_unsecure">
        <xsd:annotation>
          <xsd:documentation>Always use plain HTTP for all content, including content with sensitive URIs. (not recommended, but sometimes required for older mobile devices, or for development purposes.)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="EmailCatalog">
    <xsd:complexContent>
      <xsd:extension base="commons:NsPrefixable">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="pageTypes" type="email:PageType"/>
          <xsd:element name="layoutTypes" type="email:LayoutType"/>
          <xsd:element name="senderTypes" type="email:SenderType"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="EmailCatalog" type="email:EmailCatalog"/>
  <xsd:complexType abstract="true" name="TemplateType">
    <xsd:complexContent>
      <xsd:extension base="commons:ResourceAware">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="eFactory" type="ecore:EFactory"/>
          <xsd:element name="eClass" type="ecore:EClass"/>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="subjectTemplate" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Some subjects include tracking ID, e.g.

&lt;pre&gt;[#MCV-529-28864]: Email forwarding not working&lt;/pre&gt;

&lt;p&gt;Such subject would use this template:

&lt;pre&gt;[#{{{ticket.formalId}}}]: {{{ticket.subject}}}&lt;/pre&gt;

&lt;p&gt;It's not recommended to put company name in the subject. Best practice is to put the company name as Sender's name, optionally suffixed with "Support" etc. Also, most services (Facebook, NameCheap) do not put the recipient name in the subject.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="plainTemplate" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Plain text template.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="htmlTemplate" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>If this is null, the html template will be synthesized from plain template.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="nsPrefix" type="xsd:string"/>
        <xsd:attribute name="javaClassName" type="xsd:string"/>
        <xsd:attribute name="javaClass" type="xsd:string"/>
        <xsd:attribute name="javaClassStatus" type="commons:JavaClassStatus"/>
        <xsd:attribute name="eFactory" type="xsd:string"/>
        <xsd:attribute name="eClassStatus" type="commons:EClassStatus"/>
        <xsd:attribute name="ePackageNsPrefix" type="xsd:string"/>
        <xsd:attribute name="eClassName" type="xsd:string"/>
        <xsd:attribute name="ePackageName" type="xsd:string"/>
        <xsd:attribute name="eClass" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TemplateType" type="email:TemplateType"/>
  <xsd:complexType name="PageType">
    <xsd:complexContent>
      <xsd:extension base="email:TemplateType">
        <xsd:attribute name="senderTypeName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Sender type name, including prefix. If not set, "builtin:general" is default.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PageType" type="email:PageType"/>
  <xsd:complexType name="LayoutType">
    <xsd:complexContent>
      <xsd:extension base="email:TemplateType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="LayoutType" type="email:LayoutType"/>
  <xsd:complexType abstract="true" name="Template">
    <xsd:complexContent>
      <xsd:extension base="email:TemplateLike">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="webAddress" type="commons:WebAddress"/>
          <xsd:element name="appManifest" type="commons:AppManifest"/>
          <xsd:element name="recipients" type="email:Recipient"/>
        </xsd:choice>
        <xsd:attribute name="webAddress" type="xsd:string"/>
        <xsd:attribute name="appManifest" type="xsd:string"/>
        <xsd:attribute name="recipients" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Template" type="email:Template"/>
  <xsd:complexType name="Recipient">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="email" type="xsd:string" use="required"/>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="firstName" type="xsd:string"/>
    <xsd:attribute name="lastName" type="xsd:string"/>
    <xsd:attribute name="roleName" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Role e.g. "administrator", "sales staff for O Batiks".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="preferredFormat" type="email:EmailFormat"/>
    <xsd:attribute name="preferredWebSecurity" type="email:WebSecurity"/>
  </xsd:complexType>
  <xsd:element name="Recipient" type="email:Recipient"/>
  <xsd:complexType abstract="true" name="Layout">
    <xsd:complexContent>
      <xsd:extension base="email:Template">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="layoutType" type="email:LayoutType"/>
        </xsd:choice>
        <xsd:attribute name="pageSubject" type="xsd:string" use="required">
          <xsd:annotation>
            <xsd:documentation>Rendered subject by Page, to be used as input for the layout.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="pagePlain" type="xsd:string" use="required">
          <xsd:annotation>
            <xsd:documentation>Rendered text/plain content by Page, to be used as input for the layout.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="pageHtml" type="xsd:string" use="required">
          <xsd:annotation>
            <xsd:documentation>Rendered text/html content by Page, to be used as input for the layout.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="layoutType" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Layout" type="email:Layout"/>
  <xsd:complexType abstract="true" name="Page">
    <xsd:complexContent>
      <xsd:extension base="email:Template">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="layout" type="email:Layout"/>
          <xsd:element name="pageType" type="email:PageType"/>
          <xsd:element name="sender" type="email:Sender"/>
        </xsd:choice>
        <xsd:attribute name="layout" type="xsd:string"/>
        <xsd:attribute name="pageType" type="xsd:string"/>
        <xsd:attribute name="sender" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Page" type="email:Page"/>
  <xsd:complexType abstract="true" name="TemplateLike">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="subjectTemplate" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Some subjects include tracking ID, e.g.

&lt;pre&gt;[#MCV-529-28864]: Email forwarding not working&lt;/pre&gt;

&lt;p&gt;Such subject would use this template:

&lt;pre&gt;[#{{{ticket.formalId}}}]: {{{ticket.subject}}}&lt;/pre&gt;

&lt;p&gt;It's not recommended to put company name in the subject. Best practice is to put the company name as Sender's name, optionally suffixed with "Support" etc. Also, most services (Facebook, NameCheap) do not put the recipient name in the subject.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="plainTemplate" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Plain text template.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="htmlTemplate" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>If this is null, the html template will be synthesized from plain template.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="TemplateLike" type="email:TemplateLike"/>
  <xsd:complexType name="EmailManager">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
  </xsd:complexType>
  <xsd:element name="EmailManager" type="email:EmailManager"/>
  <xsd:complexType name="Sender">
    <xsd:annotation>
      <xsd:documentation>Sender information. Mustache variables are supported.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="email:SenderLike">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="webAddress" type="commons:WebAddress"/>
          <xsd:element name="appManifest" type="commons:AppManifest"/>
          <xsd:element name="senderType" type="email:SenderType"/>
        </xsd:choice>
        <xsd:attribute name="webAddress" type="xsd:string"/>
        <xsd:attribute name="appManifest" type="xsd:string"/>
        <xsd:attribute name="senderType" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Sender" type="email:Sender">
    <xsd:annotation>
      <xsd:documentation>Sender information. Mustache variables are supported.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="SenderType">
    <xsd:complexContent>
      <xsd:extension base="commons:NameContainer">
        <xsd:attribute name="nsPrefix" type="xsd:string"/>
        <xsd:attribute name="from" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Best practice is to put the company name as Sender's name, optionally suffixed with "Support" etc.

&lt;p&gt;Most notifications should consist only of company name. Actual conversations with support (i.e. tickets) would be suffixed with "Support".</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="email" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Email address of the sender. This can be:

&lt;ol&gt;
&lt;li&gt;a fully static text, e.g. "support@berbatik.com", very seldom used&lt;/li&gt;
&lt;li&gt;a variable, e.g. "{{{generalEmail}}}", most common&lt;/li&gt;
&lt;li&gt;a partial variable, e.g. "support@{{{appManifest.domain}}}", sometimes used&lt;/li&gt;
&lt;li&gt;multiple variables for randomly generated drop boxes, e.g. "{{{dropbox.code}}}@{{{postEmailDomain}}}" or "{{{dropbox.code}}}@post.{{{appManifest.domain}}}", which expands to "yummy234food@post.berbatik.com"&lt;/li&gt;
&lt;li&gt;a tracking address, e.g. "notification+mwkuhkji@facebookmail.com". Template is: "notification+{{{tracker.code}}}@notification.{{{appManifest.domain}}}" or "notification+{{{tracker.code}}}@{{{notificationEmailDomain}}}"&lt;/li&gt;

&lt;p&gt;WARNING: A suffix like "+something" is not recommended for non-tracking emails, some mail servers like NameCheap email forwarding does not support it, and many email forms do not accept "+".</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="replyTo" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SenderType" type="email:SenderType"/>
  <xsd:complexType abstract="true" name="SenderLike">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="from" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Best practice is to put the company name as Sender's name, optionally suffixed with "Support" etc.

&lt;p&gt;Most notifications should consist only of company name. Actual conversations with support (i.e. tickets) would be suffixed with "Support".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="email" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Email address of the sender. This can be:

&lt;ol&gt;
&lt;li&gt;a fully static text, e.g. "support@berbatik.com", very seldom used&lt;/li&gt;
&lt;li&gt;a variable, e.g. "{{{generalEmail}}}", most common&lt;/li&gt;
&lt;li&gt;a partial variable, e.g. "support@{{{appManifest.domain}}}", sometimes used&lt;/li&gt;
&lt;li&gt;multiple variables for randomly generated drop boxes, e.g. "{{{dropbox.code}}}@{{{postEmailDomain}}}" or "{{{dropbox.code}}}@post.{{{appManifest.domain}}}", which expands to "yummy234food@post.berbatik.com"&lt;/li&gt;
&lt;li&gt;a tracking address, e.g. "notification+mwkuhkji@facebookmail.com". Template is: "notification+{{{tracker.code}}}@notification.{{{appManifest.domain}}}" or "notification+{{{tracker.code}}}@{{{notificationEmailDomain}}}"&lt;/li&gt;

&lt;p&gt;WARNING: A suffix like "+something" is not recommended for non-tracking emails, some mail servers like NameCheap email forwarding does not support it, and many email forms do not accept "+".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="replyTo" type="xsd:string"/>
  </xsd:complexType>
  <xsd:element name="SenderLike" type="email:SenderLike"/>
  <xsd:complexType abstract="true" name="DefaultScope">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element name="webAddress" type="commons:WebAddress"/>
      <xsd:element name="appManifest" type="commons:AppManifest"/>
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="webAddress" type="xsd:string"/>
    <xsd:attribute name="appManifest" type="xsd:string"/>
  </xsd:complexType>
  <xsd:element name="DefaultScope" type="email:DefaultScope"/>
</xsd:schema>
